name: Setup ArgoCD, Prometheus, Grafana

on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  setup-argocd-prometheus-grafana:
      runs-on: ubuntu-latest
      steps:

        - name: Clone Repository
          uses: actions/checkout@v4
          with:
            repository: 'omarfrikha96/DevSecOps-project'
            path: ./repo

        - name: Install helm
          run: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
            helm version

        - name: Azure login
          uses: azure/login@v2
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: Azure CLI script
          uses: azure/cli@v2
          with:
            azcliversion: latest
            inlineScript: |
              az account show
      
        - name: setup k8s profile
          run: |
            export MY_RESOURCE_GROUP_NAME="myaks_aks_rg"
            export MY_CLUSTER_NAME="myaks-aks"
            az aks get-credentials --admin --name $MY_CLUSTER_NAME --overwrite-existing --resource-group $MY_RESOURCE_GROUP_NAME

        - name: Install ArgoCD
          run: |
            kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            sleep 5
            kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
            sleep 5

        - name: Apply ArdoCD yaml files
          run: |
            pwd
            ls -l
            kubectl apply -f repo/k8s-manifest/argocd/apps/argocd_project.yaml
            kubectl apply -f repo/k8s-manifest/argocd/apps/argocd_application.yaml       

        - name: setup Prometheus
          run: |
            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            helm repo update
            helm list -A
            helm status prometheus -n monitoring && helm uninstall prometheus -n monitoring || true
            kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -
            helm install prometheus prometheus-community/prometheus --namespace monitoring
            sleep 5
            kubectl patch svc prometheus-server -n monitoring -p '{"spec": {"type": "LoadBalancer"}}'
        
        - name: setup Grafana
          run: |
            helm repo add grafana https://grafana.github.io/helm-charts
            helm repo update
            helm status grafana -n grafana && helm uninstall grafana -n grafana || true
            kubectl create namespace grafana --dry-run=client -o yaml | kubectl apply -f -
            helm install grafana grafana/grafana --namespace grafana --values repo/grafana/grafana.yaml
            sleep 5
            kubectl patch svc grafana -n grafana -p '{"spec": {"type": "LoadBalancer"}}'