name: CI Pipeline

on: workflow_dispatch

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
        
      - name: Install NPM dependencies
        run: |
          npm install
          echo "Dependencies have been installed."

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-scan:
    needs: sonar-scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
         
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
        with:
          snyk-version: latest
          
      - name: Snyk Authenticate    
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code Test
        run: snyk code test --all-projects
        continue-on-error: true

  build-docker-image:
    needs: snyk-scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    defaults:
      run:
        working-directory: ./application
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./application
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project:${{ github.sha }}
      
      - name: Run tivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project:${{ github.sha }}
          format: "sarif"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "HIGH,CRITICAL"
          output: 'trivy-results.sarif'
        continue-on-error: true

      - name: Upload trivy report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
        with:
          snyc-token: ${{ secrets.SNYK_TOKEN }}
      
      - name: Snyk auth
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}
      
      - name: Snyk Container monitor
        run: |
          snyk container monitor ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project:${{ github.sha }} --file=./Dockerfile
        working-directory: ./application
      
      - name: Snyk to check for vulnerabilities in docker image
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/devsecops_project:${{ github.sha }}
          args: --file=application/Dockerfile --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  k8s-manifest-scan:
    needs: snyk-scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Run Snyk to check k8s manifect
        uses: snyk/actions/iac@master
        with:
          args:
            --severity-threshold=high
            --report
          file: k8s-manifest/
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
